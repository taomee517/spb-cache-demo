<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.idea.spbdemo.dao.mapper.UserPOMapper">
  <resultMap id="BaseResultMap" type="com.idea.spbdemo.dao.po.UserPO">
    <id column="uid" jdbcType="INTEGER" property="uid" />
    <result column="uname" jdbcType="VARCHAR" property="uname" />
    <result column="upw" jdbcType="VARCHAR" property="upw" />
    <result column="token" jdbcType="VARCHAR" property="token" />
    <result column="realname" jdbcType="VARCHAR" property="realname" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="deptid" jdbcType="INTEGER" property="deptid" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="img" jdbcType="VARCHAR" property="img" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    uid, uname, upw, token, realname, sex, deptid, email, img
  </sql>
  <select id="selectByExample" parameterType="com.idea.spbdemo.dao.po.UserPOExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from users
    where uid = #{uid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from users
    where uid = #{uid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.idea.spbdemo.dao.po.UserPO" useGeneratedKeys="true" keyProperty="uid">
    insert into users (uid, uname, upw, 
      token, realname, sex, 
      deptid, email, img)
    values (#{uid,jdbcType=INTEGER}, #{uname,jdbcType=VARCHAR}, #{upw,jdbcType=VARCHAR}, 
      #{token,jdbcType=VARCHAR}, #{realname,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, 
      #{deptid,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}, #{img,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.idea.spbdemo.dao.po.UserPO">
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        uid,
      </if>
      <if test="uname != null">
        uname,
      </if>
      <if test="upw != null">
        upw,
      </if>
      <if test="token != null">
        token,
      </if>
      <if test="realname != null">
        realname,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="deptid != null">
        deptid,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="img != null">
        img,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="uname != null">
        #{uname,jdbcType=VARCHAR},
      </if>
      <if test="upw != null">
        #{upw,jdbcType=VARCHAR},
      </if>
      <if test="token != null">
        #{token,jdbcType=VARCHAR},
      </if>
      <if test="realname != null">
        #{realname,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="deptid != null">
        #{deptid,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="img != null">
        #{img,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.idea.spbdemo.dao.po.UserPO">
    update users
    <set>
      <if test="uname != null">
        uname = #{uname,jdbcType=VARCHAR},
      </if>
      <if test="upw != null">
        upw = #{upw,jdbcType=VARCHAR},
      </if>
      <if test="token != null">
        token = #{token,jdbcType=VARCHAR},
      </if>
      <if test="realname != null">
        realname = #{realname,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="deptid != null">
        deptid = #{deptid,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="img != null">
        img = #{img,jdbcType=VARCHAR},
      </if>
    </set>
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.idea.spbdemo.dao.po.UserPO">
    update users
    set uname = #{uname,jdbcType=VARCHAR},
      upw = #{upw,jdbcType=VARCHAR},
      token = #{token,jdbcType=VARCHAR},
      realname = #{realname,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      deptid = #{deptid,jdbcType=INTEGER},
      email = #{email,jdbcType=VARCHAR},
      img = #{img,jdbcType=VARCHAR}
    where uid = #{uid,jdbcType=INTEGER}
  </update>
</mapper>